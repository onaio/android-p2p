# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Android CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit_tests:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [ 30 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Spotless check p2p-lib module
        run: ./gradlew p2p-lib:spotlessCheck
      - name: Run unit tests with Gradle
        run: ./gradlew p2p-lib:clean p2p-lib:jacocoTestReport --stacktrace
#      - name: Load AVD cache
#        uses: actions/cache@v2
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}
#      - name: Create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          working-directory: android
#          api-level: ${{ matrix.api-level }}
#          arch: x86_64
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          script: echo "Generated AVD snapshot for caching."
#      - name: Run unit and instrumentation tests and generate coverage report
#          uses: reactivecircus/android-emulator-runner@v2
#          with:
#            working-directory: android
#            api-level: ${{ matrix.api-level }}
#            arch: x86_64
#            force-avd-creation: true
#            emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#            disable-animations: true
#            script: ./gradlew p2p-lib:clean p2p-lib:jacocoTestReport --stacktrace
      - name: Upload coverage to Coveralls with Gradle
        run: ./gradlew p2p-lib:coveralls --stacktrace
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
